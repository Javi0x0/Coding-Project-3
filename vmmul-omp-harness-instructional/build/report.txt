/global/homes/j/javi/Coding-Project-3/vmmul-omp-harness-instructional/dgemv-vectorized.cpp:5:23: missed: couldn't vectorize loop
/global/homes/j/javi/Coding-Project-3/vmmul-omp-harness-instructional/dgemv-vectorized.cpp:5:23: missed: not vectorized: loop nest containing two or more consecutive inner loops cannot be vectorized
/global/homes/j/javi/Coding-Project-3/vmmul-omp-harness-instructional/dgemv-vectorized.cpp:23:18: optimized: loop vectorized using 32 byte vectors
/global/homes/j/javi/Coding-Project-3/vmmul-omp-harness-instructional/dgemv-vectorized.cpp:23:18: optimized: loop vectorized using 16 byte vectors
/global/homes/j/javi/Coding-Project-3/vmmul-omp-harness-instructional/dgemv-vectorized.cpp:10:23: missed: couldn't vectorize loop
/usr/lib64/gcc/x86_64-suse-linux/12/include/avxintrin.h:893:24: missed: not vectorized: no vectype for stmt: _48 = MEM[(__m256d_u * {ref-all})_5];
 scalar_type: __m256d_u
/global/homes/j/javi/Coding-Project-3/vmmul-omp-harness-instructional/dgemv-vectorized.cpp:4:6: note: vectorized 1 loops in function.
/global/homes/j/javi/Coding-Project-3/vmmul-omp-harness-instructional/dgemv-vectorized.cpp:20:16: note: ***** Analysis succeeded with vector mode V4DF
/global/homes/j/javi/Coding-Project-3/vmmul-omp-harness-instructional/dgemv-vectorized.cpp:20:16: note: SLPing BB part
/global/homes/j/javi/Coding-Project-3/vmmul-omp-harness-instructional/dgemv-vectorized.cpp:20:16: note: Costing subgraph: 
/global/homes/j/javi/Coding-Project-3/vmmul-omp-harness-instructional/dgemv-vectorized.cpp:20:16: note: node 0x69e7198 (max_nunits=1, refcnt=1) vector(4) double
/global/homes/j/javi/Coding-Project-3/vmmul-omp-harness-instructional/dgemv-vectorized.cpp:20:16: note: op: VEC_PERM_EXPR
/global/homes/j/javi/Coding-Project-3/vmmul-omp-harness-instructional/dgemv-vectorized.cpp:20:16: note: 	stmt 0 _152 = BIT_FIELD_REF <_72, 64, 192>;
/global/homes/j/javi/Coding-Project-3/vmmul-omp-harness-instructional/dgemv-vectorized.cpp:20:16: note: 	stmt 1 _148 = BIT_FIELD_REF <_72, 64, 128>;
/global/homes/j/javi/Coding-Project-3/vmmul-omp-harness-instructional/dgemv-vectorized.cpp:20:16: note: 	stmt 2 _142 = BIT_FIELD_REF <_72, 64, 0>;
/global/homes/j/javi/Coding-Project-3/vmmul-omp-harness-instructional/dgemv-vectorized.cpp:20:16: note: 	stmt 3 _144 = BIT_FIELD_REF <_72, 64, 64>;
/global/homes/j/javi/Coding-Project-3/vmmul-omp-harness-instructional/dgemv-vectorized.cpp:20:16: note: 	lane permutation { 0[0] 0[1] 0[2] 0[3] }
/global/homes/j/javi/Coding-Project-3/vmmul-omp-harness-instructional/dgemv-vectorized.cpp:20:16: note: 	children 0x69e7218
/global/homes/j/javi/Coding-Project-3/vmmul-omp-harness-instructional/dgemv-vectorized.cpp:20:16: note: node (external) 0x69e7218 (max_nunits=1, refcnt=1) vector(4) double
/global/homes/j/javi/Coding-Project-3/vmmul-omp-harness-instructional/dgemv-vectorized.cpp:20:16: note: 	{ }
/global/homes/j/javi/Coding-Project-3/vmmul-omp-harness-instructional/dgemv-vectorized.cpp:20:16: note: Cost model analysis: 
/global/homes/j/javi/Coding-Project-3/vmmul-omp-harness-instructional/dgemv-vectorized.cpp:20:16: note: Cost model analysis for part in loop 1:
  Vector cost: 36
  Scalar cost: 60
/global/homes/j/javi/Coding-Project-3/vmmul-omp-harness-instructional/dgemv-vectorized.cpp:20:16: note: Basic block will be vectorized using SLP
/global/homes/j/javi/Coding-Project-3/vmmul-omp-harness-instructional/dgemv-vectorized.cpp:20:16: note: Vectorizing SLP tree:
/global/homes/j/javi/Coding-Project-3/vmmul-omp-harness-instructional/dgemv-vectorized.cpp:20:16: note: Root stmt: _154 = _150 + _152;
/global/homes/j/javi/Coding-Project-3/vmmul-omp-harness-instructional/dgemv-vectorized.cpp:20:16: note: node 0x69e7198 (max_nunits=1, refcnt=1) vector(4) double
/global/homes/j/javi/Coding-Project-3/vmmul-omp-harness-instructional/dgemv-vectorized.cpp:20:16: note: op: VEC_PERM_EXPR
/global/homes/j/javi/Coding-Project-3/vmmul-omp-harness-instructional/dgemv-vectorized.cpp:20:16: note: 	stmt 0 _152 = BIT_FIELD_REF <_72, 64, 192>;
/global/homes/j/javi/Coding-Project-3/vmmul-omp-harness-instructional/dgemv-vectorized.cpp:20:16: note: 	stmt 1 _148 = BIT_FIELD_REF <_72, 64, 128>;
/global/homes/j/javi/Coding-Project-3/vmmul-omp-harness-instructional/dgemv-vectorized.cpp:20:16: note: 	stmt 2 _142 = BIT_FIELD_REF <_72, 64, 0>;
/global/homes/j/javi/Coding-Project-3/vmmul-omp-harness-instructional/dgemv-vectorized.cpp:20:16: note: 	stmt 3 _144 = BIT_FIELD_REF <_72, 64, 64>;
/global/homes/j/javi/Coding-Project-3/vmmul-omp-harness-instructional/dgemv-vectorized.cpp:20:16: note: 	lane permutation { 0[0] 0[1] 0[2] 0[3] }
/global/homes/j/javi/Coding-Project-3/vmmul-omp-harness-instructional/dgemv-vectorized.cpp:20:16: note: 	children 0x69e7218
/global/homes/j/javi/Coding-Project-3/vmmul-omp-harness-instructional/dgemv-vectorized.cpp:20:16: note: node (external) 0x69e7218 (max_nunits=1, refcnt=1) vector(4) double
/global/homes/j/javi/Coding-Project-3/vmmul-omp-harness-instructional/dgemv-vectorized.cpp:20:16: note: 	{ }
/global/homes/j/javi/Coding-Project-3/vmmul-omp-harness-instructional/dgemv-vectorized.cpp:20:16: note: ------>vectorizing SLP node starting from: _152 = BIT_FIELD_REF <_72, 64, 192>;
/global/homes/j/javi/Coding-Project-3/vmmul-omp-harness-instructional/dgemv-vectorized.cpp:20:16: note: vectorizing permutation op0[0] op0[1] op0[2] op0[3]
/global/homes/j/javi/Coding-Project-3/vmmul-omp-harness-instructional/dgemv-vectorized.cpp:20:16: note: as vops0[0][0] vops0[0][1] vops0[0][2] vops0[0][3]
/global/homes/j/javi/Coding-Project-3/vmmul-omp-harness-instructional/dgemv-vectorized.cpp:20:16: note: add new stmt: _186 = _72;
/global/homes/j/javi/Coding-Project-3/vmmul-omp-harness-instructional/dgemv-vectorized.cpp:20:16: note: vectorizing stmts using SLP.
/global/homes/j/javi/Coding-Project-3/vmmul-omp-harness-instructional/dgemv-vectorized.cpp:20:16: optimized: basic block part vectorized using 32 byte vectors
/global/homes/j/javi/Coding-Project-3/vmmul-omp-harness-instructional/dgemv-vectorized.cpp:20:16: note: ***** The result for vector mode V32QI would be the same
